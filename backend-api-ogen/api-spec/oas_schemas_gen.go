// Code generated by ogen, DO NOT EDIT.

package api

// AddPostBadRequest is response for AddPost operation.
type AddPostBadRequest struct{}

func (*AddPostBadRequest) addPostRes() {}

// AddPostInternalServerError is response for AddPost operation.
type AddPostInternalServerError struct{}

func (*AddPostInternalServerError) addPostRes() {}

type AddPostOK struct {
	Result OptFloat64 `json:"result"`
}

// GetResult returns the value of Result.
func (s *AddPostOK) GetResult() OptFloat64 {
	return s.Result
}

// SetResult sets the value of Result.
func (s *AddPostOK) SetResult(val OptFloat64) {
	s.Result = val
}

func (*AddPostOK) addPostRes() {}

type AddPostReq struct {
	Number1 OptFloat64 `json:"number1"`
	Number2 OptFloat64 `json:"number2"`
}

// GetNumber1 returns the value of Number1.
func (s *AddPostReq) GetNumber1() OptFloat64 {
	return s.Number1
}

// GetNumber2 returns the value of Number2.
func (s *AddPostReq) GetNumber2() OptFloat64 {
	return s.Number2
}

// SetNumber1 sets the value of Number1.
func (s *AddPostReq) SetNumber1(val OptFloat64) {
	s.Number1 = val
}

// SetNumber2 sets the value of Number2.
func (s *AddPostReq) SetNumber2(val OptFloat64) {
	s.Number2 = val
}

// DividePostBadRequest is response for DividePost operation.
type DividePostBadRequest struct{}

func (*DividePostBadRequest) dividePostRes() {}

// DividePostInternalServerError is response for DividePost operation.
type DividePostInternalServerError struct{}

func (*DividePostInternalServerError) dividePostRes() {}

type DividePostOK struct {
	Result OptFloat64 `json:"result"`
}

// GetResult returns the value of Result.
func (s *DividePostOK) GetResult() OptFloat64 {
	return s.Result
}

// SetResult sets the value of Result.
func (s *DividePostOK) SetResult(val OptFloat64) {
	s.Result = val
}

func (*DividePostOK) dividePostRes() {}

type DividePostReq struct {
	Dividend OptFloat64 `json:"dividend"`
	Divisor  OptFloat64 `json:"divisor"`
}

// GetDividend returns the value of Dividend.
func (s *DividePostReq) GetDividend() OptFloat64 {
	return s.Dividend
}

// GetDivisor returns the value of Divisor.
func (s *DividePostReq) GetDivisor() OptFloat64 {
	return s.Divisor
}

// SetDividend sets the value of Dividend.
func (s *DividePostReq) SetDividend(val OptFloat64) {
	s.Dividend = val
}

// SetDivisor sets the value of Divisor.
func (s *DividePostReq) SetDivisor(val OptFloat64) {
	s.Divisor = val
}

// MultiplyPostBadRequest is response for MultiplyPost operation.
type MultiplyPostBadRequest struct{}

func (*MultiplyPostBadRequest) multiplyPostRes() {}

// MultiplyPostInternalServerError is response for MultiplyPost operation.
type MultiplyPostInternalServerError struct{}

func (*MultiplyPostInternalServerError) multiplyPostRes() {}

type MultiplyPostOK struct {
	Result OptFloat64 `json:"result"`
}

// GetResult returns the value of Result.
func (s *MultiplyPostOK) GetResult() OptFloat64 {
	return s.Result
}

// SetResult sets the value of Result.
func (s *MultiplyPostOK) SetResult(val OptFloat64) {
	s.Result = val
}

func (*MultiplyPostOK) multiplyPostRes() {}

type MultiplyPostReq struct {
	Number1 OptFloat64 `json:"number1"`
	Number2 OptFloat64 `json:"number2"`
}

// GetNumber1 returns the value of Number1.
func (s *MultiplyPostReq) GetNumber1() OptFloat64 {
	return s.Number1
}

// GetNumber2 returns the value of Number2.
func (s *MultiplyPostReq) GetNumber2() OptFloat64 {
	return s.Number2
}

// SetNumber1 sets the value of Number1.
func (s *MultiplyPostReq) SetNumber1(val OptFloat64) {
	s.Number1 = val
}

// SetNumber2 sets the value of Number2.
func (s *MultiplyPostReq) SetNumber2(val OptFloat64) {
	s.Number2 = val
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// SubtractPostBadRequest is response for SubtractPost operation.
type SubtractPostBadRequest struct{}

func (*SubtractPostBadRequest) subtractPostRes() {}

// SubtractPostInternalServerError is response for SubtractPost operation.
type SubtractPostInternalServerError struct{}

func (*SubtractPostInternalServerError) subtractPostRes() {}

type SubtractPostOK struct {
	Result OptFloat64 `json:"result"`
}

// GetResult returns the value of Result.
func (s *SubtractPostOK) GetResult() OptFloat64 {
	return s.Result
}

// SetResult sets the value of Result.
func (s *SubtractPostOK) SetResult(val OptFloat64) {
	s.Result = val
}

func (*SubtractPostOK) subtractPostRes() {}

type SubtractPostReq struct {
	Number1 OptFloat64 `json:"number1"`
	Number2 OptFloat64 `json:"number2"`
}

// GetNumber1 returns the value of Number1.
func (s *SubtractPostReq) GetNumber1() OptFloat64 {
	return s.Number1
}

// GetNumber2 returns the value of Number2.
func (s *SubtractPostReq) GetNumber2() OptFloat64 {
	return s.Number2
}

// SetNumber1 sets the value of Number1.
func (s *SubtractPostReq) SetNumber1(val OptFloat64) {
	s.Number1 = val
}

// SetNumber2 sets the value of Number2.
func (s *SubtractPostReq) SetNumber2(val OptFloat64) {
	s.Number2 = val
}

// SumPostBadRequest is response for SumPost operation.
type SumPostBadRequest struct{}

func (*SumPostBadRequest) sumPostRes() {}

// SumPostInternalServerError is response for SumPost operation.
type SumPostInternalServerError struct{}

func (*SumPostInternalServerError) sumPostRes() {}

type SumPostOK struct {
	Result OptFloat64 `json:"result"`
}

// GetResult returns the value of Result.
func (s *SumPostOK) GetResult() OptFloat64 {
	return s.Result
}

// SetResult sets the value of Result.
func (s *SumPostOK) SetResult(val OptFloat64) {
	s.Result = val
}

func (*SumPostOK) sumPostRes() {}
